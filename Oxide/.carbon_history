#V2
print(abs(-5));
print(sqrt(16));
print(pow(2)(3));
print(toUpperCase("hello"));
print(split("a,b,c")(","));
print("hello");
print(abs(-5));
print(sqrt(16)); print(length("hello")); print(empty());
print(sqrt(16));
print(length("hello"));
print(pow(2)(3));
print(map(fn(x) -> x * 2)([1, 2, 3]));
print(map((x) { return x * 2 })([1, 2, 3]));
print(map(x => x * 2)([1, 2, 3]));
print("Testing abstracted code:"); print(PI); print(sqrt(16)); let doubled = map(x => x * 2)([1, 2, 3]); print(doubled);
PI
print("Testing abstracted evaluator"); let doubled = map(x => x * 2)([1, 2, 3]); print(doubled); print(PI);
print("Hello World")
let x = (1, 2); print(x);
let coord = (10, 20); let result = match coord { (x, y) => x + y }; print(result);
let x = 5; let result = match x { n if n > 3 => "big", _ => "small" }; print(result);
let point = (3, 4); let result = match point { (x, y) if x > 0 && y > 0 => "first quadrant", _ => "other" }; print(result);
