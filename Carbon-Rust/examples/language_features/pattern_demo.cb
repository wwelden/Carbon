// Carbon Pattern Matching Demonstration
// Shows Haskell-like pattern matching with modern syntax

print("=== Carbon Pattern Matching Demo ===")

// 1. Basic literal patterns
print("1. Literal patterns:")
let value = 42
let result1 = match value {
    42 => "Found the answer!",
    0 => "Zero",
    _ => "Something else"
}
print(result1)

// 2. Boolean patterns
print("2. Boolean patterns:")
let flag = true
let status = match flag {
    true => "ON",
    false => "OFF"
}
print(status)

// 3. String patterns
print("3. String patterns:")
let greeting = "hello"
let response = match greeting {
    "hello" => "Hi there!",
    "goodbye" => "Bye!",
    _ => "Unknown greeting"
}
print(response)

// 4. Variable binding
print("4. Variable binding:")
let number = 100
let doubled = match number {
    x => x * 2
}
print(doubled)

// 5. Array destructuring
print("5. Array destructuring:")
let coords = [10, 20, 30]
let sum = match coords {
    [x, y, z] => x + y + z,
    _ => 0
}
print(sum)

// 6. Mixed array patterns
print("6. Mixed array patterns:")
let data = [1, 2, 3]
let result2 = match data {
    [1, x, 3] => x * 10,
    [a, b, c] => a + b + c,
    _ => 0
}
print(result2)

// 7. Null patterns
print("7. Null patterns:")
let maybeValue = null
let nullResult = match maybeValue {
    null => "Nothing",
    x => "Something"
}
print(nullResult)

// 8. Wildcard patterns
print("8. Wildcard patterns:")
let anything = 999
let wildcardResult = match anything {
    _ => "Matches everything"
}
print(wildcardResult)

print("=== Pattern Matching Complete ===")
