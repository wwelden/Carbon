// Simple Working Functions - Demonstrates correct Carbon function syntax

// Simple function with typed parameter (matching functionEx.cb pattern)
fn double(int x) int {
    return x * 2
}

// Function without return type
fn greet(name) {
    print("Hello " + toString(name))
}

// Function demonstrating different loop styles
fn demonstrateLoops() {
    let arr = [1, 2, 3, 10, 5]

    print("=== For-in loop (no semicolons) ===")
    for item in arr {
        if item == 10 {
            print("Found ten!")
        }
    }

    print("=== While-like for loop (no semicolons) ===")
    let count = 0
    for count < 5 {
        print("Count: " + toString(count))
        count = count + 1
    }

    print("=== C-style for loop (semicolons required) ===")
    for i = 0; i < arr.len; i++ {
        print("Index " + toString(i) + ": " + toString(arr[i]))
        if arr[i] == 10 {
            print("Found ten at index " + toString(i))
        }
    }
}

// Test the functions
print("Testing double function:")
print(double(21))

print("Testing greet function:")
greet("Carbon")

print("Testing loop demonstrations:")
demonstrateLoops()
