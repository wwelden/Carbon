// Simple Tuple Test - Testing already implemented features
print("=== Testing Tuple Features ===");

// Basic tuple creation
let coord = (10, 20);
print("Basic tuple: " + toString(coord));

// Tuple with mixed types
let mixed = (42, "hello", true);
print("Mixed tuple: " + toString(mixed));

// Tuple pattern matching (without guards for now)
let matchResult = match coord {
    (x, y) => "Coordinate: x=" + toString(x) + ", y=" + toString(y)
};
print("Pattern match result: " + matchResult);

// More complex tuple pattern matching
let person = ("Alice", 30, "Engineer");

let info = match person {
    (name, age, job) => name + " is " + toString(age) + " years old and works as " + job
};
print("Person info: " + info);

// Array of tuples
let points = [(0, 0), (1, 1), (3, 4), (5, 2)];
print("Array of tuples: " + toString(points));

// Working with tuples in higher-order functions
let distances = map(point => match point {
    (x, y) => sqrt(x * x + y * y)
})(points);
print("Distances from origin: " + toString(distances));

// Filter tuples based on pattern matching
let firstQuadrant = filter(point => match point {
    (x, y) => x > 0 && y > 0
})(points);
print("First quadrant points: " + toString(firstQuadrant));

print("=== Tuple Test Complete ===");
